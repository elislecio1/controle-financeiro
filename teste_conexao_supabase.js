// Teste de conex√£o com Supabase
// Execute: node teste_conexao_supabase.js

const { createClient } = require('@supabase/supabase-js');

// Configura√ß√µes do Supabase
const SUPABASE_URL = 'https://eshaahpcddqkeevxpgfk.supabase.co';
const SUPABASE_ANON_KEY = 'sb_publishable_SV3lBKi83O1jhjIYPW_bjQ_m5vK9lBD';

async function testarConexao() {
    console.log('üîç Testando conex√£o com Supabase...\n');
    
    try {
        // 1. Criar cliente Supabase
        console.log('1Ô∏è‚É£ Criando cliente Supabase...');
        const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
        console.log('‚úÖ Cliente criado com sucesso!\n');
        
        // 2. Testar conex√£o b√°sica
        console.log('2Ô∏è‚É£ Testando conex√£o b√°sica...');
        const { data, error } = await supabase.from('user_profiles').select('count').limit(1);
        
        if (error) {
            console.log('‚ö†Ô∏è Erro na conex√£o b√°sica:', error.message);
        } else {
            console.log('‚úÖ Conex√£o b√°sica funcionando!\n');
        }
        
        // 3. Testar autentica√ß√£o
        console.log('3Ô∏è‚É£ Testando autentica√ß√£o...');
        const { data: authData, error: authError } = await supabase.auth.getSession();
        
        if (authError) {
            console.log('‚ö†Ô∏è Erro na autentica√ß√£o:', authError.message);
        } else {
            console.log('‚úÖ Autentica√ß√£o funcionando!');
            console.log('   Sess√£o atual:', authData.session ? 'Ativa' : 'Nenhuma sess√£o');
        }
        
        // 4. Verificar tabelas
        console.log('\n4Ô∏è‚É£ Verificando tabelas dispon√≠veis...');
        const { data: tables, error: tablesError } = await supabase
            .from('information_schema.tables')
            .select('table_name')
            .eq('table_schema', 'public');
            
        if (tablesError) {
            console.log('‚ö†Ô∏è Erro ao verificar tabelas:', tablesError.message);
        } else {
            console.log('‚úÖ Tabelas encontradas:', tables?.length || 0);
        }
        
        // 5. Testar query simples
        console.log('\n5Ô∏è‚É£ Testando query simples...');
        const { data: users, error: usersError } = await supabase
            .from('auth.users')
            .select('id, email')
            .limit(1);
            
        if (usersError) {
            console.log('‚ö†Ô∏è Erro ao consultar usu√°rios:', usersError.message);
        } else {
            console.log('‚úÖ Query de usu√°rios funcionando!');
            console.log('   Usu√°rios encontrados:', users?.length || 0);
        }
        
        console.log('\nüéâ Teste de conex√£o conclu√≠do!');
        
    } catch (error) {
        console.error('‚ùå Erro geral:', error.message);
    }
}

// Executar teste
testarConexao();
